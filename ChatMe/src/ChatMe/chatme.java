/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ChatMe;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class chatme extends javax.swing.JFrame implements Runnable{
    
    Socket client;
    ServerSocket server;
    BufferedReader server_reader, client_reader;
    BufferedWriter server_writer, clint_writer;

    /** Creates new form chatme */
    public chatme() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        connection = new javax.swing.JComboBox<>();
        btn_conn = new javax.swing.JButton();
        txt_user = new javax.swing.JTextField();
        list = new java.awt.List();
        txt_pesan = new javax.swing.JTextField();
        btn_kirim = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        connection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Server", "Client" }));
        connection.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                connectionItemStateChanged(evt);
            }
        });

        btn_conn.setText("ON");
        btn_conn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_connActionPerformed(evt);
            }
        });

        txt_user.setText("User");

        txt_pesan.setText("pesan");

        btn_kirim.setText("krim");
        btn_kirim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_kirimActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txt_pesan, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_kirim, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE))
                    .addComponent(list, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(connection, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_conn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_user)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_user)
                    .addComponent(btn_conn, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(connection))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(list, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_pesan)
                    .addComponent(btn_kirim, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_connectionItemStateChanged
        if (connection.getSelectedItem().equals("Server")) {
            btn_conn.setText("ON");
            txt_user.setText("Server");
        } else {
            btn_conn.setText("Hubungkan");
            txt_user.setText("Client");
        }
    }//GEN-LAST:event_connectionItemStateChanged

    private void btn_connActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_connActionPerformed
        if (btn_conn.getText().equals("Hubungkan")) {
            btn_conn.setText("Putuskan");
            client_connection();
            Thread thread = new Thread(this);
            thread.start();
        }
        else if (connection.getSelectedItem().equals("Server")) {
            btn_conn.setText("OFF");
            read_connenction();
            Thread thread = new Thread(this);
            thread.start();
        }
    }//GEN-LAST:event_btn_connActionPerformed

    private void btn_kirimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_kirimActionPerformed
        try {
            server_writer.write(txt_user.getText() + ": " +txt_pesan.getText());
            server_writer.newLine();
            server_writer.flush();
        } catch (IOException e) {
           Logger.getLogger(chatme.class.getName()).log(Level.SEVERE, null, e);
        }
        list.add("me"+txt_pesan.getText());
        txt_pesan.setText("");
    }//GEN-LAST:event_btn_kirimActionPerformed

    private void client_connection(){
        try {
            String ip_address = JOptionPane.showInputDialog("Masukan alamat Ip");
            client            = new Socket(ip_address, 2000);
            connection.setEnabled(false);
            server_reader =  new BufferedReader(new InputStreamReader(client.getInputStream()));
            server_writer =  new BufferedWriter(new OutputStreamWriter(client.getOutputStream()));
            btn_conn.setText("Putuskan");
        } catch (UnknownHostException e) {
            System.err.println("akses ke server gagal");
            System.exit(-1);
        } catch (IOException e){
            Logger.getLogger(chatme.class.getName()).log(Level.SEVERE, null, e);
            
        }
    }
    private void read_connenction(){
        try {
            try {
                try {
                    server = new ServerSocket(2000);
                    this.setTitle("Mohon Tunggu Sebenter");
                } catch (IOException e) {
                    System.err.println("Gagal membuat server");
                    System.exit(-1);
                }
                client= server.accept();
                this.setTitle("Terhubung ke Client"+client.getInetAddress());
            } catch (IOException e) {
                System.err.println("Akses server di tolak");
                System.exit(-1);
            }
            server_reader =  new BufferedReader(new InputStreamReader(client.getInputStream()));
            server_writer = new BufferedWriter(new OutputStreamWriter(client.getOutputStream()));
        } catch (IOException e) {
            System.err.println("Tidak membaca Pesan!");
            System.exit(-1);
        }
    }
    private void disconetion_by_client(){
        try {
            client.close();
            server_reader.close();
            server_writer.close();
            connection.setEnabled(true);
            btn_conn.setText("Hubungkan");
        } catch (IOException e) {
            Logger.getLogger(chatme.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    private void stopped_by_client(){
        try {
            server_reader.close();
            server_writer.close();
            btn_conn.setText("ON");
            this.setTitle("Terputus");
        } catch (IOException e) {
            Logger.getLogger(chatme.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(chatme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(chatme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(chatme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(chatme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new chatme().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_conn;
    private javax.swing.JButton btn_kirim;
    private javax.swing.JComboBox<String> connection;
    private javax.swing.JPanel jPanel1;
    private java.awt.List list;
    private javax.swing.JTextField txt_pesan;
    private javax.swing.JTextField txt_user;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        while (true){
            try {
                list.add(server_reader.readLine());
            } catch (IOException e) {
                Logger.getLogger(chatme.class.getName()).log(Level.SEVERE, null, e);
            }
        }
        }

}
